<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sms.admin.dao.ProductParentDao">
    <select id="listBySearch" parameterType="com.sms.admin.data.search.ProductParentSearch" resultMap="ProductParentDTOMap">
        SELECT *
        FROM `product_parent`
        WHERE
        enable = 1
        AND
        deleted = 0
        ORDER BY id DESC
        <if test="pageSize != null and pageSize !=0 and offset != null">
            LIMIT #{offset},#{pageSize}
        </if>
    </select>

    <select id="cntBySearch" parameterType="com.sms.admin.data.search.ProductParentSearch" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM `product_parent`
        WHERE
        enable = 1
        AND
        deleted = 0
    </select>

    <update id="updateProductParent" parameterType="com.sms.admin.data.search.ProductParentSearch">
        UPDATE
        `product_parent`
        <trim prefix="set" suffixOverrides=",">
            <if test="typeName != null">
                type_name = #{typeName},
            </if>
            <if test="deleted != null">
                deleted = #{deleted}
            </if>
        </trim>
        WHERE
          id = #{id}
    </update>

    <insert id="addProductParent" parameterType="com.sms.admin.data.search.ProductParentSearch" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
            INSERT INTO
          `product_parent`(
            type_name
          ) VALUES (
            #{typeName}
          )
    </insert>

    <!--



    <update id="updateOrder" parameterType="com.sms.admin.data.search.OrderSearch">
        UPDATE
        `order`
        <trim prefix="set" suffixOverrides=",">
            <if test="supplyId != null">
                supply_id = #{supplyId},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deleted != null">
                deleted = #{deleted}
            </if>
        </trim>
        WHERE
          id = #{id}
    </update>

    <update id="updateOrderDetail" parameterType="com.sms.admin.data.search.OrderSearch">
        UPDATE
        `order_detail`
        <trim prefix="set" suffixOverrides=",">
            <if test="goodName != null">
                good_name = #{goodName},
            </if>
            <if test="goodCompany != null">
                good_company = #{goodCompany},
            </if>
            <if test="goodNumber != null">
                good_number = #{goodNumber},
            </if>
            <if test="amount != null">
                amount = #{amount}
            </if>
        </trim>
        WHERE
        order_id = #{id}
    </update>



    <insert id="addOrderDetail" parameterType="com.sms.admin.data.search.OrderSearch" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO
          `order_detail`(
            order_id,
            good_name,
            good_company,
            good_number,
            amount
          ) VALUES (
            #{id},
            #{goodName},
            #{goodCompany},
            #{goodNumber},
            #{amount}
          )

    </insert>

    <select id="orderTatal" resultType="java.lang.Long">
        SELECT
        COUNT(id)
        FROM `order`
        WHERE
        status = 1
        AND create_time BETWEEN #{startTime} AND #{endTime}
        AND
        supply_id IN
        <foreach collection="supplyIds" index="index" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="findNumTotal" resultType="java.util.Map">
        SELECT
        s.id,
        s.supply_name,
        SUM(od.good_number) AS num
        FROM `order` AS o
        INNER JOIN order_detail AS od
        ON o.id=od.order_id
        INNER JOIN supply AS s
        ON o.supply_id=s.id
        WHERE
		o.`status` = 1
		AND
        o.create_time BETWEEN #{startTime} AND #{endTime}
        AND
        o.supply_id IN
        <foreach collection="supplyIds" index="index" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        GROUP BY s.id
    </select>

    <select id="moneyTotal" resultType="java.lang.Long">
        SELECT
        SUM(od.amount)
        FROM
        `order` AS o
        INNER JOIN supply AS s
        ON o.supply_id = s.id
        INNER JOIN order_detail AS od
        ON od.order_id = o.id
        WHERE
        o.`status` = 1
        AND
        o.create_time BETWEEN #{startTime} AND #{endTime}
        AND
        o.supply_id IN
        <foreach collection="supplyIds" index="index" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>
-->
    <resultMap id="ProductParentDTOMap" type="com.sms.admin.data.dto.ProductParentDTO">
        <id column="id" property="id" jdbcType="INTEGER" />
        <!--<result column="type" property="type" jdbcType="INTEGER" />-->
        <result column="type_name" property="typeName" jdbcType="VARCHAR" />
        <result column="enable" property="enable" jdbcType="BIT" />
        <result column="deleted" property="deleted" jdbcType="BIT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    </resultMap>
</mapper>