<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sms.admin.dao.ProductDao">

    <select id="listBySearch" parameterType="com.sms.admin.data.search.ProductSearch" resultMap="ProductDTOMap">
        SELECT *
        FROM `product`
        WHERE
        deleted = 0
        <if test="proName != null">
            AND pro_name LIKE CONCAT('%',#{proName},'%')
        </if>
        <if test="proType != null">
            AND pro_type = #{proType}
        </if>
        <if test="online != null">
            AND online = #{online}
        </if>
        ORDER BY online DESC,id DESC
        <if test="pageSize != null and pageSize !=0 and offset != null">
            LIMIT #{offset},#{pageSize}
        </if>
    </select>

    <select id="cntBySearch" parameterType="com.sms.admin.data.search.ProductSearch" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM `product`
        WHERE
        deleted = 0
        <if test="proName != null">
            AND pro_name LIKE CONCAT('%',#{proName},'%')
        </if>
        <if test="proType != null">
            AND pro_type = #{proType}
        </if>
        <if test="online != null">
            AND online = #{online}
        </if>
    </select>

    <select id="findProductById" parameterType="com.sms.admin.data.search.ProductSearch" resultMap="ProductDTOMap">
        SELECT *
        FROM `product`
        WHERE
        deleted = 0
        <if test="proType != null">
            AND pro_type = #{proType}
        </if>
        <if test="productId != null">
            AND id = #{productId}
        </if>
    </select>

    <update id="updateProductById" parameterType="com.sms.admin.data.entity.Product">
        UPDATE
        `product`
        <trim prefix="set" suffixOverrides=",">
            <if test="proName != null">
                pro_name = #{proName},
            </if>
            <if test="standards != null">
                standards = #{standards},
            </if>
            <if test="repertory != null">
                repertory = #{repertory},
            </if>
            <if test="place != null">
                place = #{place},
            </if>
            <if test="proPicture != null">
                pro_picture = #{proPicture},
            </if>
            <if test="oldPrice != null">
                old_price = #{oldPrice}
            </if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <update id="updateProduct" parameterType="com.sms.admin.data.search.ProductSearch">
        UPDATE
          `product`
        <trim prefix="set" suffixOverrides=",">
            <if test="online != null">
                online = #{online},
            </if>
            <if test="standards != null">
                standards = #{standards},
            </if>
            <if test="oldPrice != null">
                old_price = #{oldPrice},
            </if>
            <if test="newPrice != null">
                new_price = #{newPrice}
            </if>
        </trim>
        WHERE
          deleted = 0
          AND
          id = #{productId}
    </update>

    <insert id="addProduct" parameterType="com.sms.admin.data.entity.Product" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
         INSERT INTO
           `product`(
             pro_name,
             pro_picture,
             pro_type,
             old_price,
             standards,
             repertory,
             place
           ) VALUES (
             #{proName},
             #{proPicture},
             #{proType},
             #{oldPrice},
             #{standards},
             #{repertory},
             #{place}
           )

     </insert>

    <!--


     <update id="updateOrder" parameterType="com.sms.admin.data.search.OrderSearch">
         UPDATE
         `order`
         <trim prefix="set" suffixOverrides=",">
             <if test="supplyId != null">
                 supply_id = #{supplyId},
             </if>
             <if test="status != null">
                 status = #{status},
             </if>
             <if test="deleted != null">
                 deleted = #{deleted}
             </if>
         </trim>
         WHERE
           id = #{id}
     </update>

     <update id="updateOrderDetail" parameterType="com.sms.admin.data.search.OrderSearch">
         UPDATE
         `order_detail`
         <trim prefix="set" suffixOverrides=",">
             <if test="goodName != null">
                 good_name = #{goodName},
             </if>
             <if test="goodCompany != null">
                 good_company = #{goodCompany},
             </if>
             <if test="goodNumber != null">
                 good_number = #{goodNumber},
             </if>
             <if test="amount != null">
                 amount = #{amount}
             </if>
         </trim>
         WHERE
         order_id = #{id}
     </update>

     <insert id="addOrder" parameterType="com.sms.admin.data.search.OrderSearch" useGeneratedKeys="true" keyProperty="id"
             keyColumn="id">
             INSERT INTO
           `order`(
             order_code,
             supply_id,
             status
           ) VALUES (
             #{orderCode},
             #{supplyId},
             #{status}
           )

     </insert>

     <insert id="addOrderDetail" parameterType="com.sms.admin.data.search.OrderSearch" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
         INSERT INTO
           `order_detail`(
             order_id,
             good_name,
             good_company,
             good_number,
             amount
           ) VALUES (
             #{id},
             #{goodName},
             #{goodCompany},
             #{goodNumber},
             #{amount}
           )

     </insert>

     <select id="orderTatal" resultType="java.lang.Long">
         SELECT
         COUNT(id)
         FROM `order`
         WHERE
         status = 1
         AND create_time BETWEEN #{startTime} AND #{endTime}
         AND
         supply_id IN
         <foreach collection="supplyIds" index="index" item="item" separator="," open="(" close=")">
             #{item}
         </foreach>
     </select>

     <select id="findNumTotal" resultType="java.util.Map">
         SELECT
         s.id,
         s.supply_name,
         SUM(od.good_number) AS num
         FROM `order` AS o
         INNER JOIN order_detail AS od
         ON o.id=od.order_id
         INNER JOIN supply AS s
         ON o.supply_id=s.id
         WHERE
         o.`status` = 1
         AND
         o.create_time BETWEEN #{startTime} AND #{endTime}
         AND
         o.supply_id IN
         <foreach collection="supplyIds" index="index" item="item" separator="," open="(" close=")">
             #{item}
         </foreach>
         GROUP BY s.id
     </select>

     <select id="moneyTotal" resultType="java.lang.Long">
         SELECT
         SUM(od.amount)
         FROM
         `order` AS o
         INNER JOIN supply AS s
         ON o.supply_id = s.id
         INNER JOIN order_detail AS od
         ON od.order_id = o.id
         WHERE
         o.`status` = 1
         AND
         o.create_time BETWEEN #{startTime} AND #{endTime}
         AND
         o.supply_id IN
         <foreach collection="supplyIds" index="index" item="item" separator="," open="(" close=")">
             #{item}
         </foreach>
     </select>
 -->
    <resultMap id="ProductDTOMap" type="com.sms.admin.data.dto.ProductDTO">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="pro_name" property="proName" jdbcType="VARCHAR" />
        <result column="pro_picture" property="proPicture" jdbcType="VARCHAR" />
        <result column="pro_type" property="proType" jdbcType="VARCHAR"/>
        <result column="old_price" property="oldPrice" jdbcType="VARCHAR" />
        <result column="new_price" property="newPrice" jdbcType="VARCHAR" />
        <result column="standards" property="standards" jdbcType="INTEGER" />
        <result column="repertory" property="repertory" jdbcType="INTEGER" />
        <result column="sale_num" property="saleNum" jdbcType="INTEGER" />
        <result column="place" property="place" jdbcType="VARCHAR" />
        <result column="online" property="online" jdbcType="BIT" />
        <result column="deleted" property="deleted" jdbcType="BIT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    </resultMap>
</mapper>